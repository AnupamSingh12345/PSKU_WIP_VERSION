{"version":3,"sources":["components/Home.js","components/ErrorPage.js","actions/types.js","utils/fetch.js","app-constants/app-constants.js","actions/postAction.js","components/CountryFilter.js","reducers/CountryReducer.js","reducers/SourceReducer.js","reducers/CategoryReducer.js","reducers/BrandReducer.js","reducers/UpdateListReducer.js","reducers/DataReducer.js","reducers/UpdateListDataReducer.js","reducers/UserDetailsReducer.js","store.js","components/SourceFilter.js","components/CategoryFilter.js","components/BrandFilter.js","components/ReturnData.js","utils/utils.js","components/GetData.js","components/Header.js","components/Footer.js","components/Filters.js","App.js","components/Navigation.js","serviceWorker.js","index.js"],"names":["NormalLoginForm","Form","Item","handleSubmit","e","preventDefault","_this","props","form","validateFields","err","values","console","log","getFieldDecorator","this","react_default","a","createElement","es_form","onSubmit","className","rules","required","message","input","prefix","icon","type","style","color","placeholder","es_button","htmlType","React","Component","create","name","GET_USERNAME","UPDATED_LOADER","TABLE_UPDATED_LOADER","SOURCE_FILTER_LOADER","CATEGORY_FILTER_LOADER","BRAND_FILTER_LOADER","wrappedFetch","url","options","arguments","length","undefined","fetch","concat","then","response","status","Error","AppConstants","BASE_URL","getUserDetails","dispatch","userNameNode","document","getElementById","userPermNode","savePerms","value","split","serverTime","userName","Date","parentNode","removeChild","countryFilterData","res","json","data","payload","SourceFilterData","postData","method","headers","Content-Type","body","JSON","stringify","CategoryFilterData","BrandFilterData","PSKUFilterData","mode","UpdatePSKU","loaderUpdate","TableloaderUpdate","SourceFilterLoader","CategoryFilterLoader","BrandFilterLoader","UpdateTargetWD","updateList","key","updateListData","Option","Select","CountryFilter","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","bind","assertThisInitialized","post","SelectedCountry","es_select","showSearch","width","marginTop","marginLeft","optionFilterProp","defaultOpen","notFoundContent","CountryLoader","spin","size","tip","updatelist","filterOption","option","children","toLowerCase","indexOf","posts","map","CountryList","connect","state","country","update","bindActionCreators","initialState","CountrydropdownReducer","action","objectSpread","channel","ChanneldropdownReducer","category","CategorydropdownReducer","brand","BranddropdownReducer","UpdatelistReducer","uState","parse","dataupdatd","loader","tableLoader","SourceLoader","CategoryLoader","BrandLoader","PSKUdataReducer","dataAfterUpdate","UpdatelistDataReducer","username","UserDetailsReducer","store","createStore","combineReducers","UpdateListData","userDetails","applyMiddleware","thunk","SourceFilter","SelectedChannel","Channel","SourceFilter_Option","CategoryFilter","SelectedCategory","Category","CategoryFilter_Option","BrandFilter","SelectedBrand","Brand","BrandFilter_Option","EditableContext","createContext","EditableFormRow","_ref","index","objectWithoutProperties","Provider","EditableCell","editing","toggleEdit","setState","focus","save","_this$props","record","handleSave","error","currentTarget","id","renderCell","_this$props2","dataIndex","title","margin","initialValue","ref","node","onPressEnter","onBlur","paddingRight","onClick","_this$props3","editable","restProps","Consumer","SelectedRow","Power_Value","PSKU_Data","_this2","onSelectChange","selectedRowKeys","selectedRows","push","pskuArray","arrLen","finalArr","i","utils","start","loading","setTimeout","update_psku","selectedRow","power","power_flag","warning","row","newData","toConsumableArray","findIndex","item","psku_id","targetWD","getColumnSearchProps","filterDropdown","_ref2","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","searchInput","target","handleSearch","marginBottom","display","marginRight","handleReset","filterIcon","filtered","onFilter","toString","includes","onFilterDropdownVisibleChange","visible","select","render","text","main_default","highlightStyle","backgroundColor","searchWords","searchText","autoEscape","textToHighlight","columns","defaultSortOrder","sorter","b","sales_musd_amt","wgt_dist_pct","numrc_dist_pct","table_data","selectedRowPost","updatelistState","onChangeFlag","prevProps","updatedData","updatePostData","getElementsByClassName","innerHTML","_this3","DataAfterPSKUupdate","_this$state","components","cell","col","onCell","rowSelection","hasSelected","hasSelectedPower","disabled","ReturnData_Option","spinning","table","rowClassName","bordered","dataSource","GetData","handleClick","isEnabled","Header_Logo","fontSize","float","href","Footer_Logo","Header","Layout","Content","Footer","Sider","Filters","es","layout","Filters_Header","components_CountryFilter","components_SourceFilter","components_CategoryFilter","components_BrandFilter","components_GetData","ReturnData","App","components_Filters","Boolean","window","location","hostname","match","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.126fcc02.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\nimport '../App.css';\nconst FormItem = Form.Item;\nclass NormalLoginForm extends React.Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\n        <Form.Item>\n          {getFieldDecorator('username', {\n            rules: [{ required: true, message: 'Please input your username!' }],\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"Username\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('password', {\n            rules: [{ required: true, message: 'Please input your Password!' }],\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          \n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n            Log in\n          </Button>\n          \n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(NormalLoginForm);\n\nexport default WrappedNormalLoginForm;\n","import React, { Component } from 'react';\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  }\n    }\n    render() { \n        return (\n            <div>\n                <h1>Page does not exist</h1>\n            </div>\n          );\n    }\n}\n \n\n\nexport default Home;","export const FETCH_COUNTRY_FILTER = 'FETCH_COUNTRY_FILTER';\nexport const FETCH_SOURCE_FILTER = 'FETCH_SOURCE_FILTER';\nexport const FETCH_CATEGORY_FILTER = 'FETCH_CATEGORY_FILTER';\nexport const FETCH_BRAND_FILTER = 'FETCH_BRAND_FILTER';\nexport const FETCH_PSKU_DATA = 'FETCH_PSKU_DATA';\nexport const UPDATE_LIST = 'UPDATE_LIST';\nexport const UPDATE_PSKU = 'UPDATE_PSKU';\nexport const UPDATE_LIST_DATA = 'UPDATE_LIST_DATA';\nexport const FETCH_SOURCE_FILTER_INITIAL = 'FETCH_SOURCE_FILTER_INITIAL';\nexport const FETCH_CATEGORY_FILTER_INITIAL = 'FETCH_SOURCE_FILTER_INITIAL';\nexport const FETCH_BRAND_FILTER_INITIAL = 'FETCH_SOURCE_FILTER_INITIAL';\nexport const UPDATED_FLAG = 'UPDATED_FLAG';\nexport const UPDATED_FLAG_FALSE = 'UPDATED_FLAG_FALSE';\nexport const GET_USERNAME = 'GET_USERNAME';\nexport const UPDATED_LOADER = 'UPDATED_LOADER';\nexport const TABLE_UPDATED_LOADER = 'TABLE_UPDATED_LOADER';\nexport const SOURCE_FILTER_LOADER = 'SOURCE_FILTER_LOADER';\nexport const SOURCE_FILTER_LOADER_OFF = 'SOURCE_FILTER_LOADER_OFF';\nexport const CATEGORY_FILTER_LOADER = 'CATEGORY_FILTER_LOADER';\nexport const CATEGORY_FILTER_LOADER_OFF = 'CATEGORY_FILTER_LOADER_OFF';\nexport const BRAND_FILTER_LOADER = 'BRAND_FILTER_LOADER';\nexport const BRAND_FILTER_LOADER_OFF = 'BRAND_FILTER_LOADER_OFF';\nexport const COUNTRY_FILTER_LOADER_OFF = 'COUNTRY_FILTER_LOADER_OFF';\n\n\n\n","/* global fetch:true */\nimport \"whatwg-fetch\";\n\nfunction getBaseUrl() {\n  if (process.env.NODE_ENV === \"dev\" && process.env.ENDPOINT === \"be\") {\n    return \"\";\n  }\n  if (process.env.NODE_ENV === \"dev\" && process.env.PROD_DEPLOY !== \"prod\") {\n    return \"\";\n  }\n  return \"\";\n}\n\nconst baseUrl = getBaseUrl();\n\nfunction wrappedFetch(url, options = {}) {\n  return fetch(`${url}`, options).then(response => {\n    // return fetch(`${baseUrl}/${url}`).then(response => {\n    if (response.status >= 400) {\n      throw new Error(`Error while getting data from:  ${url}`);\n    }\n    // try {\n    //   JSON.parse(response);\n    // } catch (e) {\n    //   throw new Error(\"Error while parsing response\", response);\n    // }\n    return response;\n  });\n}\n\nexport default wrappedFetch;\n","const AppConstants = {\n  \"BASE_URL\": \"/api\"\n  }\n  \n  export default AppConstants\n","import { COUNTRY_FILTER_LOADER_OFF, BRAND_FILTER_LOADER, BRAND_FILTER_LOADER_OFF, CATEGORY_FILTER_LOADER, CATEGORY_FILTER_LOADER_OFF, SOURCE_FILTER_LOADER_OFF, SOURCE_FILTER_LOADER, TABLE_UPDATED_LOADER, UPDATED_LOADER, GET_USERNAME, UPDATED_FLAG_FALSE, UPDATED_FLAG, FETCH_BRAND_FILTER_INITIAL, FETCH_CATEGORY_FILTER_INITIAL, FETCH_SOURCE_FILTER_INITIAL, UPDATE_LIST_DATA, UPDATE_PSKU, UPDATE_LIST, FETCH_COUNTRY_FILTER, FETCH_SOURCE_FILTER, FETCH_CATEGORY_FILTER, FETCH_BRAND_FILTER, FETCH_PSKU_DATA } from '../actions/types';\n\nimport fetch from \"../utils/fetch\";\nimport AppConstants from \"../app-constants/app-constants.js\";\n\nexport function getUserDetails() {\n    return dispatch => {\n        const userNameNode = document.getElementById(\"username\");\n        const userPermNode = document.getElementById(\"userpermissions\");\n        const savePerms = userPermNode.value.split(\",\");\n        const serverTime = document.getElementById(\"servertime\");\n        dispatch({\n            type: GET_USERNAME,\n            userName: userNameNode.value,\n            savePerms: savePerms,\n            serverTime: new Date(serverTime.value)\n        });\n\n        userNameNode.parentNode.removeChild(userNameNode);\n        userPermNode.parentNode.removeChild(userPermNode);\n        serverTime.parentNode.removeChild(serverTime);\n    };\n}\n\n\n\n\nexport const countryFilterData = () => dispatch => {\n\n    fetch(`${AppConstants.BASE_URL}/CountryFetch/`)\n        .then(res => res.json().then(data => ({ res, data })))\n        .then(function (res, data) {\n\n            if (res.res.status === 200) {\n                dispatch({\n                    type: FETCH_COUNTRY_FILTER,\n                    payload: res.data\n                })\n                dispatch({\n                    type: COUNTRY_FILTER_LOADER_OFF,\n                })\n            }\n\n        })\n    // .then(res => res.json())\n    // .then(data => dispatch({\n    //     type: FETCH_COUNTRY_FILTER,\n    //     payload: data\n    // }))\n\n}\n\nvar generated_csrf_token = \"{{ csrf_token }}\";\n\nexport const SourceFilterData = (postData) => dispatch => {\n    if (postData != \"\") {\n        console.log(\"post country\", postData)\n        fetch(`${AppConstants.BASE_URL}/ChannelFetch/`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(postData),\n\n\n        })\n            .then(res => res.json().then(data => ({ res, data })))\n            .then(function (res, data) {\n\n                if (res.res.status === 200) {\n                    dispatch({\n                        type: FETCH_SOURCE_FILTER,\n                        payload: res.data\n                    })\n                    dispatch({\n                        type: SOURCE_FILTER_LOADER_OFF,\n                    })\n                }\n\n            })\n        // .then(res => res.json())\n        // .then(data => dispatch({\n        //     type: FETCH_SOURCE_FILTER,\n        //     payload: data\n        // }))\n    }\n    else {\n        dispatch({\n            type: FETCH_SOURCE_FILTER_INITIAL\n        })\n    }\n}\n\n\nexport const CategoryFilterData = (postData) => dispatch => {\n    if (postData != \"\") {\n        fetch(`${AppConstants.BASE_URL}/CategoryFetch/`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(postData)\n        })\n            .then(res => res.json().then(data => ({ res, data })))\n            .then(function (res, data) {\n\n                if (res.res.status === 200) {\n                    dispatch({\n                        type: FETCH_CATEGORY_FILTER,\n                        payload: res.data\n                    })\n                    dispatch({\n                        type: CATEGORY_FILTER_LOADER_OFF,\n                    })\n                }\n\n            })\n        // .then(res => res.json())\n        // .then(data => dispatch({\n        //     type: FETCH_CATEGORY_FILTER,\n        //     payload: data\n        // }))\n    }\n    else {\n        dispatch({\n            type: FETCH_CATEGORY_FILTER_INITIAL\n        })\n    }\n}\n\nexport const BrandFilterData = (postData) => dispatch => {\n\n    if (postData != \"\") {\n        fetch(`${AppConstants.BASE_URL}/BrandFetch/`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(postData)\n        })\n            .then(res => res.json().then(data => ({ res, data })))\n            .then(function (res, data) {\n\n                if (res.res.status === 200) {\n                    dispatch({\n                        type: FETCH_BRAND_FILTER,\n                        payload: res.data\n                    })\n                    dispatch({\n                        type: BRAND_FILTER_LOADER_OFF,\n                    })\n                }\n\n            })\n        // .then(res => res.json())\n        // .then(data => dispatch({\n        //     type: FETCH_BRAND_FILTER,\n        //     payload: data\n        // }))\n    }\n    else {\n        dispatch({\n            type: FETCH_BRAND_FILTER_INITIAL\n        })\n    }\n}\n\n\n\nexport const PSKUFilterData = (postData) => dispatch => {\n    fetch(`${AppConstants.BASE_URL}/DataFetch/`, {\n        method: 'POST',\n        mode: 'cors',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(postData)\n    })\n        .then(res => res.json().then(data => ({ res, data })))\n        .then(function (res, data) {\n\n            if (res.res.status === 200) {\n                dispatch({\n                    type: FETCH_PSKU_DATA,\n                    payload: res.data\n                })\n                dispatch({\n                    type: UPDATED_FLAG_FALSE,\n                })\n            }\n\n        })\n\n}\n\nexport const UpdatePSKU = (postData) => dispatch => {\n\n    const self = this;\n    fetch(`${AppConstants.BASE_URL}/UpdatePSKU/`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(postData)\n    })\n        .then(res => res.json().then(data => ({ res, data })))\n        .then(function (res, data) {\n\n            if (res.res.status === 200) {\n                dispatch({\n                    type: UPDATED_FLAG,\n                    payload: res.data\n                })\n            }\n\n        })\n}\n\n\n\nexport function loaderUpdate() {\n    return dispatch => {\n        dispatch({\n            type: UPDATED_LOADER,\n        })\n\n\n    };\n}\n\nexport function TableloaderUpdate() {\n    return dispatch => {\n        dispatch({\n            type: TABLE_UPDATED_LOADER,\n        })\n\n\n    };\n}\n\nexport function SourceFilterLoader() {\n    return dispatch => {\n        dispatch({\n            type: SOURCE_FILTER_LOADER,\n        })\n\n\n    };\n}\n\nexport function CategoryFilterLoader() {\n    return dispatch => {\n        dispatch({\n            type: CATEGORY_FILTER_LOADER,\n        })\n\n\n    };\n}\n\nexport function BrandFilterLoader() {\n    return dispatch => {\n        dispatch({\n            type: BRAND_FILTER_LOADER,\n        })\n\n\n    };\n}\n\n\n\n\n\n\n\nexport const UpdateTargetWD = (postData) => dispatch => {\n\n    fetch(`${AppConstants.BASE_URL}/UpdateTargetWD/`,\n        {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(postData)\n        })\n        .then(res => res.json().then(data => ({ res, data })))\n        .then(function (res, data) {\n            if (res.res.status === 200) {\n                dispatch({\n                    type: UPDATED_FLAG,\n                    payload: res.data\n                })\n            }\n\n        })\n    // end\n\n\n\n\n\n\n}\n\n\n\nexport const updateList = (key, value) => {\n    return {\n        type: UPDATE_LIST,\n        key,\n        value\n    }\n}\n\nexport const updateListData = (key, value) => {\n    return {\n        type: UPDATE_LIST_DATA,\n        key,\n        value\n    }\n}\n\n\n\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { SourceFilterLoader, countryFilterData, SourceFilterData, CategoryFilterData, BrandFilterData } from '../actions/postAction';\n\nimport { Select,Spin } from 'antd';\nimport { updateList } from '../actions/postAction.js'\n\nconst Option = Select.Option;\nclass CountryFilter extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChange = this.onChange.bind(this);\n\n    }\n\n\n    componentWillMount() {\n\n        this.props.countryFilterData();\n    }\n\n\n    onChange(e) {\n\n        const post = {\n            SelectedCountry: e\n        }\n\n        this.props.SourceFilterData(post);\n\n        this.props.updateList(\"country\", e)\n        this.props.updateList(\"category\", \"Select a Category\")\n        this.props.updateList(\"channel\", \"Select a Channel\")\n        this.props.updateList(\"brand\", \"Select a Brand\")\n        this.props.SourceFilterLoader();\n    }\n\n    render() {\n\n        return (\n\n            <Select\n                showSearch\n                style={{ width: 180, marginTop: 0.5 + 'em', marginLeft: 0.5 + 'em' }}\n\n                placeholder=\"Select Country\"\n                optionFilterProp=\"children\"\n                defaultOpen={false}\n                onChange={this.onChange}\n                notFoundContent={this.props.CountryLoader ? <Spin size=\"small\" tip=\"Loading Countries...\"/> : \"No Data\"}\n\n                value={this.props.updatelist['country']}\n                filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n            >\n                {this.props.posts.map((CountryList) => {\n                    return (\n                        <Option key={CountryList['mkt_cntry_name']}>{CountryList['mkt_cntry_name']}</Option>\n                    )\n                }\n\n                )}\n            </Select>\n\n        )\n    }\n}\n\n\n\nconst mapStatetoProps = (state) => {\n\n    return {\n        posts: state.country.country,\n        updatelist: state.update,\n        CountryLoader: state.data.CountryLoader,\n    }\n}\n\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        SourceFilterData, countryFilterData, CategoryFilterData, BrandFilterData, updateList, SourceFilterLoader\n    }, dispatch);\n}\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(CountryFilter);\n\n","import { UPDATE_LIST, FETCH_COUNTRY_FILTER, FETCH_SOURCE_FILTER, FETCH_CATEGORY_FILTER, FETCH_BRAND_FILTER, FETCH_PSKU_DATA } from '../actions/types';\n\nconst initialState = {\n  country: []\n}\n\nconst CountrydropdownReducer = (state = initialState, action) => {\n  switch (action.type) {\n\n    case FETCH_COUNTRY_FILTER:\n\n      return {\n        ...state,\n        country: action.payload['CountryList']\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default CountrydropdownReducer;","import { FETCH_SOURCE_FILTER_INITIAL, UPDATE_LIST, FETCH_COUNTRY_FILTER, FETCH_SOURCE_FILTER, FETCH_CATEGORY_FILTER, FETCH_BRAND_FILTER, FETCH_PSKU_DATA } from '../actions/types';\n\nconst initialState = {\n  channel: []\n}\n\nconst ChanneldropdownReducer = (state = initialState, action) => {\n  switch (action.type) {\n\n    case FETCH_SOURCE_FILTER:\n\n      return {\n        ...state,\n        channel: action.payload['ChannelList']\n      }\n    case FETCH_SOURCE_FILTER_INITIAL:\n      return {\n        ...state,\n        channel: []\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default ChanneldropdownReducer;","import { FETCH_CATEGORY_FILTER_INITIAL, UPDATE_LIST, FETCH_COUNTRY_FILTER, FETCH_SOURCE_FILTER, FETCH_CATEGORY_FILTER, FETCH_BRAND_FILTER, FETCH_PSKU_DATA } from '../actions/types';\n\nconst initialState = {\n    category: []\n}\n\nconst CategorydropdownReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case FETCH_CATEGORY_FILTER:\n\n            return {\n                ...state,\n                category: action.payload['CategoryList']\n            }\n        case FETCH_CATEGORY_FILTER_INITIAL:\n            return {\n                ...state,\n                category: []\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport default CategorydropdownReducer;","import { FETCH_BRAND_FILTER_INITIAL, UPDATE_LIST, FETCH_COUNTRY_FILTER, FETCH_SOURCE_FILTER, FETCH_CATEGORY_FILTER, FETCH_BRAND_FILTER, FETCH_PSKU_DATA } from '../actions/types';\n\nconst initialState = {\n    brand: []\n}\n\nconst BranddropdownReducer = (state = initialState, action) => {\n   \n    switch (action.type) {\n\n        case FETCH_BRAND_FILTER:\n\n            return {\n                ...state,\n                brand: action.payload['BrandList']\n            }\n        case FETCH_BRAND_FILTER_INITIAL:\n            return {\n                ...state,\n                brand: []\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport default BranddropdownReducer;","import {UPDATE_LIST} from '../actions/types';\n\nconst UpdatelistReducer = (state = {}, action) => {\n    switch (action.type) {\n      case UPDATE_LIST:\n        const uState = JSON.parse(JSON.stringify(state));\n        uState[action.key] = action.value;\n        return uState;\n        default:\n      return state;\n    }\n  }\n  \n  export default UpdatelistReducer;","import {COUNTRY_FILTER_LOADER_OFF,BRAND_FILTER_LOADER,BRAND_FILTER_LOADER_OFF,CATEGORY_FILTER_LOADER,CATEGORY_FILTER_LOADER_OFF,SOURCE_FILTER_LOADER_OFF,SOURCE_FILTER_LOADER,TABLE_UPDATED_LOADER,UPDATED_LOADER, UPDATED_FLAG_FALSE, UPDATED_FLAG, UPDATE_LIST, FETCH_COUNTRY_FILTER, FETCH_SOURCE_FILTER, FETCH_CATEGORY_FILTER, FETCH_BRAND_FILTER, FETCH_PSKU_DATA } from '../actions/types';\n\nconst initialState = {\n    data: [],\n    dataupdatd: false,\n    loader:false,\n    tableLoader:false,\n    SourceLoader:false,\n    CategoryLoader: false,\n    BrandLoader:false,\n    CountryLoader:true\n\n}\n\nconst PSKUdataReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case FETCH_PSKU_DATA:\n\n            return {\n                ...state,\n                data: action.payload['Data']\n            }\n\n        case UPDATED_FLAG:\n            // console.log(\"inside reducer\");\n            // console.log(\"update Reducer\",action.payload['UpdatePSKU'])\n            return {\n                ...state,\n                dataupdatd: true,\n                dataAfterUpdate: action.payload['UpdatePSKuWD']\n            }\n\n        case UPDATED_FLAG_FALSE:\n            return {\n                ...state,\n                dataupdatd: false,\n                loader: false,\n                tableLoader:false\n            }\n            \n            case UPDATED_LOADER:\n            \n            return {\n                ...state,\n                loader: true\n            }\n            case TABLE_UPDATED_LOADER:\n            \n            return {\n                ...state,\n                tableLoader: true\n            }\n            case SOURCE_FILTER_LOADER:\n            return {\n                ...state,\n                SourceLoader: true\n            }\n            case SOURCE_FILTER_LOADER_OFF:\n            return {\n                ...state,\n                SourceLoader: false\n            }\n            case CATEGORY_FILTER_LOADER:\n            return {\n                ...state,\n                CategoryLoader: true\n            }\n            case CATEGORY_FILTER_LOADER_OFF:\n            return {\n                ...state,\n                CategoryLoader: false\n            }\n            case BRAND_FILTER_LOADER:\n            return {\n                ...state,\n                BrandLoader: true\n            }\n            case BRAND_FILTER_LOADER_OFF:\n            return {\n                ...state,\n                BrandLoader: false\n            }\n            \n            case COUNTRY_FILTER_LOADER_OFF:\n            return {\n                ...state,\n                CountryLoader: false\n            }\n        default:\n            return state;\n    }\n}\n\nexport default PSKUdataReducer;","\nimport {UPDATE_LIST_DATA} from '../actions/types';\n\nconst UpdatelistDataReducer = (state = {}, action) => {\n    switch (action.type) {\n      case UPDATE_LIST_DATA:\n        const uState = JSON.parse(JSON.stringify(state));\n        uState[action.key] = action.value;\n        return uState;\n        default:\n      return state;\n    }\n  }\n  \n  export default UpdatelistDataReducer;","import { GET_USERNAME } from '../actions/types';\n\n\nconst initialState = {\n  username: \"User\",\n  savePerms: [],\n  serverTime: new Date()\n};\n\nconst UserDetailsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_USERNAME:\n      return {\n        ...state,\n        username: action.userName,\n        savePerms: action.savePerms,\n        serverTime: action.serverTime\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default UserDetailsReducer;\n","\nimport thunk from 'redux-thunk';\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport CountrydropdownReducer from './reducers/CountryReducer.js'\nimport ChanneldropdownReducer from './reducers/SourceReducer.js'\nimport CategorydropdownReducer from './reducers/CategoryReducer.js'\nimport BranddropdownReducer from './reducers/BrandReducer'\nimport UpdatelistReducer from './reducers/UpdateListReducer'\nimport PSKUdataReducer from './reducers/DataReducer'\nimport UpdatelistDataReducer from './reducers/UpdateListDataReducer'\nimport UserDetailsReducer from './reducers/UserDetailsReducer'\n\n\nconst store = createStore(\n    combineReducers({\n        country: CountrydropdownReducer,\n        channel:ChanneldropdownReducer,\n        category: CategorydropdownReducer,\n        brand :BranddropdownReducer,\n        update: UpdatelistReducer,\n        data: PSKUdataReducer,\n       UpdateListData:UpdatelistDataReducer,\n       userDetails: UserDetailsReducer\n    }),\n    applyMiddleware(thunk)\n    )\n\nexport default store;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport {CategoryFilterLoader,SourceFilterLoader, SourceFilterData, CategoryFilterData, BrandFilterData, updateList } from '../actions/postAction';\nimport { Select } from 'antd';\nimport { Spin } from 'antd';\n\n\n\n\nconst Option = Select.Option;\nclass SourceFilter extends Component {\n\n    constructor(props) {\n        super();\n\n        this.onChange = this.onChange.bind(this);\n    }\n\n    componentWillMount() {\n\n        this.props.SourceFilterData(\"\");\n    }\n\n    onChange(e) {\n\n\n        const post = {\n            SelectedChannel: e\n        }\n\n        this.props.CategoryFilterData(post);\n        this.props.updateList(\"channel\", e)\n        this.props.updateList(\"category\", \"Select a Category\")\n        this.props.updateList(\"brand\", \"Select a Brand\")\n        this.props.CategoryFilterLoader();\n    }\n\n    render() {\n        return (\n\n            <Select\n                showSearch\n                style={{ width: 180, marginLeft: .5 + 'em' }}\n                placeholder=\"Select Channel\"\n                optionFilterProp=\"children\"\n                defaultOpen={false}\n                onChange={this.onChange}\n                notFoundContent={this.props.SourceLoader ? <Spin size=\"small\" tip=\"Loading Channels...\"/> : \"No Data; Select Country\"}\n                value={this.props.updatelist['channel']}\n                filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n            >\n                {this.props.posts.map((Channel) => {\n\n                    return (\n                        <Option key={Channel['mkt_name']}>{Channel['mkt_name']}</Option>\n                    )\n                }\n\n                )}\n            </Select>\n        )\n    }\n}\n\n\n\nconst mapStatetoProps = state => ({\n    posts: state.channel.channel,\n    updatelist: state.update,\n    SourceLoader: state.data.SourceLoader,\n})\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        CategoryFilterData, SourceFilterData, BrandFilterData, updateList,SourceFilterLoader,CategoryFilterLoader\n    }, dispatch);\n}\nexport default connect(mapStatetoProps, mapDispatchToProps)(SourceFilter);\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { BrandFilterLoader, CategoryFilterLoader, CategoryFilterData, BrandFilterData, updateList } from '../actions/postAction';\nimport PropTypes from 'prop-types';\nimport { Select, Spin } from 'antd';\n\n\nconst Option = Select.Option;\nclass CategoryFilter extends Component {\n\n    constructor(props) {\n        super();\n        this.state = {\n            SelectedCategory: \"\",\n        }\n        this.onChange = this.onChange.bind(this);\n\n    }\n\n    componentWillMount() {\n\n        this.props.CategoryFilterData(\"\");\n    }\n\n    onChange(e) {\n\n        const post = {\n            SelectedCategory: e\n        }\n\n        console.log(\"Selected Category\", post)\n\n        this.props.BrandFilterData(post);\n        this.props.updateList(\"category\", e)\n        this.props.updateList(\"brand\", \"Select a Brand\")\n        this.props.BrandFilterLoader();\n    }\n\n    render() {\n        return (\n            <Select\n                showSearch\n                style={{ width: 180, marginLeft: .5 + 'em' }}\n                placeholder=\"Select Category\"\n                optionFilterProp=\"children\"\n                defaultOpen={false}\n                notFoundContent={this.props.CategoryLoader ? <Spin size=\"small\" tip=\"Loading Categories...\"/> : \"No Data; Select Channel\"}\n                onChange={this.onChange}\n                value={this.props.updatelist['category']}\n                filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n            >\n                {this.props.posts.map((Category) => {\n\n                    return (\n                        <Option key={Category['level1']}>{Category['level1']}</Option>\n                    )\n                }\n\n                )}\n            </Select>\n        )\n    }\n}\n\n\n\nconst mapStatetoProps = state => ({\n    posts: state.category.category,\n    updatelist: state.update,\n    CategoryLoader: state.data.CategoryLoader,\n})\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        CategoryFilterData, BrandFilterData, updateList, CategoryFilterLoader, BrandFilterLoader\n    }, dispatch);\n}\nexport default connect(mapStatetoProps, mapDispatchToProps)(CategoryFilter);\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { BrandFilterLoader, BrandFilterData, updateList } from '../actions/postAction';\nimport { Select, Spin } from 'antd';\n\n\nconst Option = Select.Option;\nclass BrandFilter extends Component {\n\n    constructor(props) {\n        super();\n        this.state = {\n            SelectedBrand: \"\",\n        }\n        this.onChange = this.onChange.bind(this);\n\n    }\n\n    // componentWillMount()\n    // {\n\n    //     this.props.BrandFilterData(\"\");\n    //     this.props.updateList(\"brand\", \"Select a Brand\")\n    // }\n\n    onChange(e) {\n\n\n        const post = {\n            SelectedBrand: this.state.SelectedBrand\n        }\n        this.props.updateList(\"brand\", e)\n    }\n\n    render() {\n\n        return (\n            <Select\n                showSearch\n                style={{ width: 180, marginLeft: .5 + 'em' }}\n                placeholder=\"Select Brand\"\n                optionFilterProp=\"children\"\n                defaultOpen={false}\n                notFoundContent={this.props.BrandLoader ? <Spin size=\"small\" tip=\"Loading Brands...\"/> : \"No Data; Select Category\"}\n                onChange={this.onChange}\n                value={this.props.updatelist['brand']}\n                filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n            >\n                {this.props.posts.map((Brand) => {\n\n                    return (\n                        <Option key={Brand['brand']}>{Brand['brand']}</Option>\n                    )\n                }\n\n                )}\n            </Select>\n        )\n    }\n}\n\n\nconst mapStatetoProps = state => ({\n    posts: state.brand.brand,\n    updatelist: state.update,\n    BrandLoader: state.data.BrandLoader,\n\n})\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        BrandFilterData, updateList, BrandFilterLoader\n    }, dispatch);\n}\nexport default connect(mapStatetoProps, mapDispatchToProps)(BrandFilter);\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { TableloaderUpdate, loaderUpdate, PSKUFilterData, UpdatePSKU, updateListData, UpdateTargetWD } from '../actions/postAction';\nimport * as utils from \"../utils/utils.js\";\nimport { Select } from 'antd';\nimport { Table, Input, Button, Form, Icon, message } from 'antd';\nimport 'antd/dist/antd.css';\nimport \"../App.css\";\nimport Highlighter from 'react-highlight-words';\nimport { Spin } from 'antd';\n\nconst Option = Select.Option;\n\n\n\nconst EditableContext = React.createContext();\n\nconst EditableRow = ({ form, index, ...props }) => (\n  <EditableContext.Provider value={form}>\n    <tr {...props} />\n  </EditableContext.Provider>\n);\n\nconst EditableFormRow = Form.create()(EditableRow);\n\nclass EditableCell extends React.Component {\n  state = {\n    editing: false,\n  };\n\n  toggleEdit = () => {\n    const editing = !this.state.editing;\n    this.setState({ editing }, () => {\n      if (editing) {\n        this.input.focus();\n      }\n    });\n  };\n\n  save = e => {\n\n    const { record, handleSave } = this.props;\n    this.form.validateFields((error, values) => {\n      if (error && error[e.currentTarget.id]) {\n        return;\n      }\n      this.toggleEdit();\n      handleSave({ ...record, ...values });\n    });\n  };\n\n  renderCell = form => {\n    this.form = form;\n    const { children, dataIndex, record, title } = this.props;\n    const { editing } = this.state;\n    return editing ? (\n      <Form.Item style={{ margin: 0 }}>\n        {form.getFieldDecorator(dataIndex, {\n          rules: [\n            {\n              required: false,\n\n            },\n          ],\n          initialValue: record[dataIndex],\n        })(<Input ref={node => (this.input = node)} onPressEnter={this.save} onBlur={this.save} />)}\n      </Form.Item>\n    ) : (\n        <div\n          className=\"editable-cell-value-wrap\"\n          style={{ paddingRight: 24 }}\n          onClick={this.toggleEdit}\n        >\n          {children}\n        </div>\n      );\n  };\n\n  render() {\n    const {\n      editable,\n      dataIndex,\n      title,\n      record,\n      index,\n      handleSave,\n      children,\n      ...restProps\n    } = this.props;\n    return (\n      <td {...restProps}>\n        {editable ? (\n          <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\n        ) : (\n            children\n          )}\n      </td>\n    );\n  }\n}\n\n\n\n// Table\nvar SelectedRow = [];\n\n\nconst Power_Value = ['YES', 'NO'];\nclass PSKU_Data extends Component {\n\n  constructor(props) {\n    super();\n    this.columns = [\n      {\n        title: 'COUNTRY',\n        dataIndex: 'mkt_cntry_name',\n        key: 'psku_id'\n      },\n      {\n        title: 'CHANNEL',\n        dataIndex: 'mkt_name',\n        key: 'psku_id'\n      },\n      {\n        title: 'CATEGORY',\n        dataIndex: 'level1',\n        key: 'psku_id'\n      },\n      {\n        title: 'BRAND',\n        dataIndex: 'brand',\n        key: 'psku_id'\n      },\n\n      {\n        title: 'SKU',\n        dataIndex: 'prod_name',\n        key: 'prod_name',\n        ...this.getColumnSearchProps('prod_name'),\n      },\n      {\n        title: 'VALUE SALES',\n        dataIndex: 'sales_musd_amt',\n        key: 'psku_id',\n        defaultSortOrder: 'descend',\n        sorter: (a, b) => a.sales_musd_amt - b.sales_musd_amt,\n      },\n      {\n        title: 'WD',\n        dataIndex: 'wgt_dist_pct',\n        key: 'psku_id',\n        defaultSortOrder: 'descend',\n        sorter: (a, b) => a.wgt_dist_pct - b.wgt_dist_pct,\n      },\n      {\n        title: 'ND',\n        dataIndex: 'numrc_dist_pct',\n        key: 'psku_id',\n        defaultSortOrder: 'descend',\n        sorter: (a, b) => a.numrc_dist_pct - b.numrc_dist_pct,\n      },\n      {\n        title: 'POWER',\n        dataIndex: 'power_flag',\n        key: 'psku_id'\n      },\n      {\n        title: 'TARGET WD',\n        dataIndex: 'target_wd',\n        key: 'psku_id',\n        editable: true,\n      },\n\n    ];\n\n    this.state = {\n\n\n      searchText: '',\n      table_data: [],\n      selectedRowKeys: [],\n      selectedRowPost: [],\n      loading: false,\n      updatelistState: [],\n      power_flag: \"\",\n\n    }\n    this.onSelectChange = this.onSelectChange.bind(this);\n    this.onChangeFlag = this.onChangeFlag.bind(this);\n\n  }\n\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.updatedData != this.props.updatedData) {\n      this.props.PSKUFilterData(this.props.updatePostData);\n    }\n\n  }\n\n\n  componentDidMount() {\n\n    document.getElementsByClassName(\"ant-empty-description\")[0].innerHTML = \"No Data <br> Select Filters and Submit to Fetch Data.\";\n\n  }\n\n  onSelectChange = (selectedRowKeys, selectedRows) => {\n    // console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', utils.selectedId(selectedRows));\n    // console.log('selectedRowKeys changed: ', selectedRowKeys);\n    this.setState({ selectedRowKeys });\n\n    SelectedRow = [];\n    SelectedRow.push(utils.selectedId(selectedRows))\n\n  };\n\n  start = () => {\n    this.setState({ loading: true });\n    setTimeout(() => {\n      this.setState({\n        selectedRowKeys: [],\n        loading: false,\n      });\n    }, 1000);\n  };\n\n  update_psku = (selectedRows) => {\n\n    var post = {\n      selectedRow: SelectedRow,\n      power: this.state.power_flag,\n\n    }\n\n    if (SelectedRow[0].length === 0 || SelectedRow[0] === undefined) {\n      message.warning('No SKU selected.');\n\n    }\n    else {\n\n      this.props.UpdatePSKU(post);\n      this.props.loaderUpdate();\n      SelectedRow = [];\n\n    }\n\n\n\n  };\n\n  onChangeFlag(e) {\n    this.setState({\n      power_flag: e,\n    });\n\n  }\n\n\n  handleSave = row => {\n\n    const newData = [...this.props.posts];\n    const index = newData.findIndex(item => row.psku_id === item.psku_id);\n\n    const item = newData[index];\n    \n    var post = {\n      selectedRow: item['psku_id'],\n      targetWD: row['target_wd'],\n\n    }\n    this.props.loaderUpdate();\n    this.props.UpdateTargetWD(post);\n\n  };\n\n  getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => this.handleSearch(selectedKeys, confirm)}\n          icon=\"search\"\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        >\n          Search\n        </Button>\n        <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n          Reset\n        </Button>\n      </div>\n    ),\n    filterIcon: filtered => (\n      <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        .toString()\n        .toLowerCase()\n        .includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: text => (\n      <Highlighter\n        highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n        searchWords={[this.state.searchText]}\n        autoEscape\n        textToHighlight={text.toString()}\n      />\n    ),\n  });\n\n  handleSearch = (selectedKeys, confirm) => {\n    confirm();\n    this.setState({ searchText: selectedKeys[0] });\n  };\n\n  handleReset = clearFilters => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n\n  render() {\n    console.log(\"PSKU/WD data updated by user\", this.props.DataAfterPSKUupdate)\n    console.log(\"loader\", this.props.loader)\n    const { loading, selectedRowKeys } = this.state;\n    const components = {\n      body: {\n        row: EditableFormRow,\n        cell: EditableCell,\n      },\n    };\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n      return {\n        ...col,\n        onCell: record => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave,\n        }),\n      };\n    });\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: this.onSelectChange,\n    };\n    const hasSelected = selectedRowKeys.length > 0;\n    const hasSelectedPower = this.state.power_flag.length > 0 && selectedRowKeys.length > 0;\n\n\n\n\n    return (\n      <div>\n        <div style={{ marginTop: 1.5 + 'em', marginLeft: 0.5 + 'em' }} >\n          <Button className=\"reset-update-button\" type=\"primary\" onClick={this.start} disabled={!hasSelected} loading={loading}>\n            Reset Selection\n          </Button>\n\n          <span className=\"reset-update-button\" style={{ marginLeft: 8 }}>\n            {hasSelected ? `Selected ${selectedRowKeys.length} items` : ''}\n          </span>\n          <Select\n            showSearch\n            style={{ width: 120, marginLeft: 8 }}\n            placeholder=\"Select Flag\"\n            optionFilterProp=\"children\"\n            defaultOpen={false}\n            onChange={this.onChangeFlag}\n            filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n          >\n            {Power_Value.map(Power_Value => (\n              <Option key={Power_Value}>{Power_Value}</Option>\n            ))}\n          </Select>\n          <Button className=\"reset-update-button\" style={{ marginLeft: 1 + 'em' }} type=\"primary\" onClick={this.update_psku} disabled={!hasSelectedPower} loading={loading}>\n            Update PSKU\n          </Button>\n          <Spin tip=\"Updating Data...\" style={{ marginLeft: 2 + 'em' }} spinning={this.props.loader}>\n          </Spin>\n          <div>{this.props.updatedData}</div>\n\n\n        </div>\n\n\n\n        <div style={{ marginTop: 0.5 + 'em' }}>\n          <Table className=\"test-class\" components={components} rowClassName={() => 'editable-row'}\n            bordered rowSelection={rowSelection} columns={columns} dataSource={this.props.posts} loading={this.props.tableLoader} />\n\n\n        </div>\n\n      </div>\n    )\n  }\n}\n\nconst mapStatetoProps = (state) => {\n\n  return {\n    posts: state.data.data,\n    updatePostData: state.UpdateListData,\n    updatedData: state.data.dataupdatd,\n    DataAfterPSKUupdate: state.data.dataAfterUpdate,\n    loader: state.data.loader,\n    tableLoader: state.data.tableLoader\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    PSKUFilterData, UpdatePSKU, updateListData, UpdateTargetWD, loaderUpdate, TableloaderUpdate\n  }, dispatch);\n}\nexport default connect(mapStatetoProps, mapDispatchToProps)(PSKU_Data);\n\n","function selectedId(pskuArray) {\n    let arrLen = pskuArray.length\n    let finalArr = []\n    if (pskuArray !== undefined) {\n        for (let i = 0; i < arrLen; i++) {\n            finalArr.push(pskuArray[i]['psku_id'])\n        }\n    }\n    return finalArr\n}\n\nexport { selectedId }","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Button } from 'antd'\nimport {TableloaderUpdate, PSKUFilterData, updateList, updateListData, SourceFilterData, CategoryFilterData } from '../actions/postAction'\n\n\nclass GetData extends Component {\n\n    handleClick = () => {\n\n\n        this.props.SourceFilterData(\"\");\n        this.props.CategoryFilterData(\"\");\n        this.props.PSKUFilterData(this.props.posts);\n        this.props.updateList(\"category\", \"Select a Category\")\n        this.props.updateList(\"channel\", \"Select a Channel\")\n        this.props.updateList(\"brand\", \"Select a Brand\")\n        this.props.updateList(\"country\", \"Select a Country\")\n        this.props.updateListData(\"category\", this.props.posts['category'])\n        this.props.updateListData(\"channel\", this.props.posts['channel'])\n        this.props.updateListData(\"brand\", this.props.posts['brand'])\n        this.props.updateListData(\"country\", this.props.posts['country'])\n        this.props.TableloaderUpdate();\n    }\n\n    render() {\n        var isEnabled = false;\n\n        if (this.props.posts['brand'] != \"Select a Brand\" || this.props.posts['brand'] == \"\") {\n\n            isEnabled = true;\n        }\n\n\n\n\n        return (\n            <div style={{ marginLeft: 60 + 'em', marginTop: -2.3 + 'em' }}>\n                <Button type=\"primary\" onClick={this.handleClick} disabled={!isEnabled}>\n                    Submit\n          </Button>\n            </div>\n        )\n    }\n}\n\n\nconst mapStatetoProps = (state) => {\n    return {\n        posts: state.update,\n    }\n}\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        PSKUFilterData, updateList, updateListData, SourceFilterData, CategoryFilterData,TableloaderUpdate\n    }, dispatch);\n}\nexport default connect(mapStatetoProps, mapDispatchToProps)(GetData);\n\n","import React, { Component } from 'react';\nimport '../App.css';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { getUserDetails } from '../actions/postAction';\nclass Header_Logo extends Component {\n  render() {\n\n    return (\n      <div>\n        <div className=\"ant-layout-header\" style={{ marginTop: -0.4 + 'em', marginLeft: 25 + 'em' }}>PSKU SIMULATOR </div>\n        <div style={{ marginTop: -50 + 'px', marginLeft: 75 + 'em', fontSize: 13 + 'px', float: 'right' }}>Welcome {this.props.userName}\n          <a style={{ marginLeft: 10 + 'px' }} href=\"/.auth/logout\">\n            Logout\n            </a>\n        </div>\n      </div>\n\n\n\n    );\n  }\n}\n\n\n\nconst mapStatetoProps = (state) => {\n\n  return {\n    userName: state.userDetails.username\n  }\n}\n\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    getUserDetails\n  }, dispatch);\n}\nexport default connect(mapStatetoProps, mapDispatchToProps)(Header_Logo);","import React, { Component } from 'react';\nimport '../App.css';\nclass Footer_Logo extends Component {\n  render() {\n    return (\n      <div>\n     <div className=\"ant-layout-footer\"  >\n     <div style={{ marginTop:-10+'px',marginLeft:-10+'px'}}>\n     <strong>PSKU Simulator</strong> by <a href=\"https://fractal.ai\">Fractal Analytics</a>\n          {\" | \"} &copy;2019 <a href=\"https://us.pg.com/\">Procter &amp; Gamble</a>\n          </div>\n</div>\n     </div>\n      \n     \n    );\n  }\n}\n\nexport default Footer_Logo;\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport CountryFilter from './CountryFilter';\nimport store from '.././store';\nimport SourceFilter from './SourceFilter';\nimport CategoryFilter from './CategoryFilter';\nimport BrandFilter from './BrandFilter';\nimport PSKU_Data from './ReturnData';\nimport GetData from './GetData';\nimport Header_Logo from './Header'\nimport { Layout } from 'antd';\nimport Footer_Logo from './Footer'\n\nconst { Header, Footer, Sider, Content } = Layout;\nclass Filters extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n    render() {\n        return (\n            <Provider store={store}>\n                <div>\n                    <Layout>\n                        <Header><Header_Logo /></Header>\n                        <Content>\n                            <CountryFilter />\n                            <SourceFilter />\n                            <CategoryFilter />\n                            <BrandFilter />\n                            <GetData />\n                            <PSKU_Data />\n                        </Content>\n\n\n                    </Layout>\n                    <Footer_Logo />\n                </div>\n            </Provider>\n\n        );\n    }\n}\n\n\n\nexport default Filters;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Link, Switch } from \"react-router-dom\";\nimport NormalLoginForm from './components/Home';\nimport ErrorPage from './components/ErrorPage';\nimport Filters from './components/Filters';\nimport Naviagtion from './components/Navigation';\nimport { Layout } from 'antd';\nimport Header_Logo from './components/Header'\nimport Footer_Logo from './components/Footer'\n\nconst { Header, Footer, Sider, Content } = Layout;\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        {/* <Layout>\n          <Header><Header_Logo /></Header>\n          <Content> */}\n        {/* <BrowserRouter>\n      <div>\n      <Naviagtion/>\n      <Switch>\n      <Route exact path=\"/\" component={NormalLoginForm} />\n      <Route path=\"/FirstPage\" component={Filters}/>\n      <Route component={ErrorPage} />\n      </Switch>\n      </div>\n      </BrowserRouter> */}\n        <Filters />\n        {/* </Content>\n         \n\n        </Layout>\n         <Footer_Logo /> */}\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom'\n\nclass Naviagtion extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n    render() {\n        return (\n            <div>\n                <NavLink to=\"/\">Home</NavLink>\n                <NavLink to=\"/FirstPage\">Go</NavLink>\n            </div>)\n    }\n}\n\nexport default Naviagtion;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { getUserDetails } from './actions/postAction';\nimport store from \"./store\";\n\n\nReactDOM.render(<App />, document.getElementById('root'));\nstore.dispatch(getUserDetails());\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}